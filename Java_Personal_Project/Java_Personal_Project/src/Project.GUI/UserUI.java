
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Admin
 */
public class UserUI extends javax.swing.JFrame {

    private User user;
    private Login login;
    private ArrayList<String> citiesList;

    /**
     * Creates new form UserUI
     *
     * @param user
     * @param login
     * @param citiesList
     */
    public UserUI(User user, Login login, ArrayList<String> citiesList) {
        this.user = user;
        this.login = login;
        this.citiesList = citiesList;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        planEditPopupMenu = new javax.swing.JPopupMenu();
        updatePopupItem = new javax.swing.JMenuItem();
        deletePopupItem = new javax.swing.JMenuItem();
        userDataPanels = new javax.swing.JTabbedPane();
        userPersonalDataPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        userIDText = new javax.swing.JTextField();
        userNameText = new javax.swing.JTextField();
        userUsernameText = new javax.swing.JTextField();
        userPasswordText = new javax.swing.JTextField();
        userIDLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        userPasswordLabel = new javax.swing.JLabel();
        personalInformationLabel = new javax.swing.JLabel();
        userUsernameLabel = new javax.swing.JLabel();
        userAdressInfoLabel = new javax.swing.JLabel();
        userAdressStreetNumberLabel = new javax.swing.JLabel();
        userAddressStreetLabel = new javax.swing.JLabel();
        userAddressSuburbLabel = new javax.swing.JLabel();
        userAddressCityLabel = new javax.swing.JLabel();
        userAddressStreetNumberText = new javax.swing.JTextField();
        userAddressStreetText = new javax.swing.JTextField();
        userAddressSuburbText = new javax.swing.JTextField();
        userAddressCityText = new javax.swing.JTextField();
        userCityChoiceCheckBox = new javax.swing.JCheckBox();
        userChangeButton = new javax.swing.JButton();
        citiesComboBox = new javax.swing.JComboBox<>();
        userAddPlanPanel = new javax.swing.JPanel();
        mobilePhoneTitleLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        planAddButton = new javax.swing.JButton();
        planClearButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        planIDText = new javax.swing.JTextField();
        planUsernameText = new javax.swing.JTextField();
        planIDLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        personalPlanRadioButton = new javax.swing.JRadioButton();
        businessPlanRadioButton = new javax.swing.JRadioButton();
        internetQuotaLabel = new javax.swing.JLabel();
        capLimitLabel = new javax.swing.JLabel();
        planInternetQuotaText = new javax.swing.JTextField();
        planCapLimitText = new javax.swing.JTextField();
        planCityOrABNLabel = new javax.swing.JLabel();
        planCityOrABNText = new javax.swing.JTextField();
        planNumberOfEmployeesLabel = new javax.swing.JLabel();
        planNOPText = new javax.swing.JTextField();
        generalInformationLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        mobilePhoneModelLabel = new javax.swing.JLabel();
        mobilePhoneOSLabel = new javax.swing.JLabel();
        mobileModelMemorySizeLabel = new javax.swing.JLabel();
        mobileModelPriceLabel = new javax.swing.JLabel();
        planMobileModelText = new javax.swing.JTextField();
        planMobileMemorySizeText = new javax.swing.JTextField();
        planMobilePriceText = new javax.swing.JTextField();
        planMobileOSComboBox = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        planDateMonthText = new javax.swing.JTextField();
        planDateYearText = new javax.swing.JTextField();
        planDateDayText = new javax.swing.JTextField();
        userFindAPlanPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        foundPlanAreaText = new javax.swing.JTextArea();
        findplanIDLabel = new javax.swing.JLabel();
        findPlanButton = new javax.swing.JButton();
        findPlanIDText = new javax.swing.JTextField();
        userPlanInfoPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        planInformationTable = new javax.swing.JTable();
        planDeleteButton = new javax.swing.JButton();
        planUpdateButton = new javax.swing.JButton();
        userPlanFilterPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        planFilteredTable = new javax.swing.JTable();
        mobileModelLabel = new javax.swing.JLabel();
        expiryDateLabel = new javax.swing.JLabel();
        usernameSortCheckBox = new javax.swing.JCheckBox();
        mobileModelFilterText = new javax.swing.JTextField();
        expiryDateFilterText = new javax.swing.JTextField();
        planFilterButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        logoutMenu = new javax.swing.JMenu();

        updatePopupItem.setText("Update");
        updatePopupItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePopupItemActionPerformed(evt);
            }
        });
        planEditPopupMenu.add(updatePopupItem);

        deletePopupItem.setText("Delete");
        deletePopupItem.setAutoscrolls(true);
        deletePopupItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePopupItemActionPerformed(evt);
            }
        });
        planEditPopupMenu.add(deletePopupItem);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userDataPanels.setBackground(new java.awt.Color(255, 255, 255));
        userDataPanels.setForeground(new java.awt.Color(51, 51, 51));
        userDataPanels.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userDataPanels.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                userDataPanelsStateChanged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        userIDText.setEditable(false);
        userIDText.setBackground(new java.awt.Color(255, 255, 255));
        userIDText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userIDText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userIDText.setText("jTextField1");

        userNameText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userNameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userNameText.setText("jTextField1");

        userUsernameText.setEditable(false);
        userUsernameText.setBackground(new java.awt.Color(255, 255, 255));
        userUsernameText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userUsernameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userUsernameText.setText("jTextField1");

        userPasswordText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userPasswordText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userPasswordText.setText("jTextField1");

        userIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userIDLabel.setForeground(new java.awt.Color(102, 102, 102));
        userIDLabel.setText("ID");

        userNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userNameLabel.setForeground(new java.awt.Color(102, 102, 102));
        userNameLabel.setText("Name");

        userPasswordLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userPasswordLabel.setForeground(new java.awt.Color(102, 102, 102));
        userPasswordLabel.setText("Password");

        personalInformationLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        personalInformationLabel.setForeground(new java.awt.Color(51, 51, 51));
        personalInformationLabel.setText("Personal Information");

        userUsernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userUsernameLabel.setForeground(new java.awt.Color(102, 102, 102));
        userUsernameLabel.setText("Username");

        userAdressInfoLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        userAdressInfoLabel.setForeground(new java.awt.Color(51, 51, 51));
        userAdressInfoLabel.setText("Address Information");

        userAdressStreetNumberLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userAdressStreetNumberLabel.setForeground(new java.awt.Color(102, 102, 102));
        userAdressStreetNumberLabel.setText("Street Number");

        userAddressStreetLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userAddressStreetLabel.setForeground(new java.awt.Color(102, 102, 102));
        userAddressStreetLabel.setText("Street");

        userAddressSuburbLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userAddressSuburbLabel.setForeground(new java.awt.Color(102, 102, 102));
        userAddressSuburbLabel.setText("Suburb ");

        userAddressCityLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userAddressCityLabel.setForeground(new java.awt.Color(102, 102, 102));
        userAddressCityLabel.setText("City");

        userAddressStreetNumberText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userAddressStreetNumberText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userAddressStreetNumberText.setText("jTextField1");

        userAddressStreetText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userAddressStreetText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userAddressStreetText.setText("jTextField1");

        userAddressSuburbText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userAddressSuburbText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userAddressSuburbText.setText("jTextField1");

        userAddressCityText.setEditable(false);
        userAddressCityText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userAddressCityText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userAddressCityText.setText("jTextField1");

        userCityChoiceCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        userCityChoiceCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userCityChoiceCheckBox.setForeground(new java.awt.Color(51, 51, 51));
        userCityChoiceCheckBox.setText("New City");
        userCityChoiceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userCityChoiceCheckBoxActionPerformed(evt);
            }
        });

        userChangeButton.setBackground(new java.awt.Color(255, 153, 0));
        userChangeButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userChangeButton.setForeground(new java.awt.Color(255, 255, 255));
        userChangeButton.setText("Change");
        userChangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userChangeButtonActionPerformed(evt);
            }
        });

        citiesComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        citiesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userAddressStreetLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userIDLabel)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(userUsernameLabel)
                                                        .addComponent(userPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(userAdressStreetNumberLabel))
                                                    .addGap(30, 30, 30))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(userAddressSuburbLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGap(31, 31, 31)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(userAddressCityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(31, 31, 31)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(userNameText)
                                            .addComponent(userIDText)
                                            .addComponent(userUsernameText)
                                            .addComponent(userAddressStreetNumberText)
                                            .addComponent(userAddressStreetText)
                                            .addComponent(userAddressSuburbText)
                                            .addComponent(citiesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(userCityChoiceCheckBox)
                                                .addGap(18, 18, 18)
                                                .addComponent(userAddressCityText, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                                            .addComponent(userPasswordText))))
                                .addGap(20, 20, 20))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(userAdressInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(personalInformationLabel)
                                .addGap(10, 10, 10)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(userChangeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(personalInformationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(userIDText)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userUsernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(userAdressInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userAdressStreetNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userAddressStreetNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userAddressStreetLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userAddressStreetText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userAddressSuburbLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userAddressSuburbText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userAddressCityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(citiesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userCityChoiceCheckBox)
                    .addComponent(userAddressCityText, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userChangeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout userPersonalDataPanelLayout = new javax.swing.GroupLayout(userPersonalDataPanel);
        userPersonalDataPanel.setLayout(userPersonalDataPanelLayout);
        userPersonalDataPanelLayout.setHorizontalGroup(
            userPersonalDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPersonalDataPanelLayout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(383, Short.MAX_VALUE))
        );
        userPersonalDataPanelLayout.setVerticalGroup(
            userPersonalDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPersonalDataPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        userDataPanels.addTab("Edit Personal Data", userPersonalDataPanel);

        userAddPlanPanel.setPreferredSize(new java.awt.Dimension(1000, 1000));

        mobilePhoneTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        mobilePhoneTitleLabel.setForeground(new java.awt.Color(51, 51, 51));
        mobilePhoneTitleLabel.setText("Mobile Phone");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Expiry Date");

        planAddButton.setBackground(new java.awt.Color(255, 153, 51));
        planAddButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        planAddButton.setForeground(new java.awt.Color(255, 255, 255));
        planAddButton.setText("Add");
        planAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planAddButtonActionPerformed(evt);
            }
        });

        planClearButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        planClearButton.setForeground(new java.awt.Color(255, 153, 0));
        planClearButton.setText("Clear");
        planClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planClearButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        planIDText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        planUsernameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        planIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        planIDLabel.setForeground(new java.awt.Color(102, 102, 102));
        planIDLabel.setText("Plan ID");

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(102, 102, 102));
        usernameLabel.setText("Username");

        personalPlanRadioButton.setBackground(new java.awt.Color(255, 204, 102));
        buttonGroup1.add(personalPlanRadioButton);
        personalPlanRadioButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        personalPlanRadioButton.setForeground(new java.awt.Color(51, 51, 51));
        personalPlanRadioButton.setSelected(true);
        personalPlanRadioButton.setText("Personal Plan");
        personalPlanRadioButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        personalPlanRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                personalPlanRadioButtonStateChanged(evt);
            }
        });

        businessPlanRadioButton.setBackground(new java.awt.Color(255, 204, 102));
        buttonGroup1.add(businessPlanRadioButton);
        businessPlanRadioButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        businessPlanRadioButton.setForeground(new java.awt.Color(51, 51, 51));
        businessPlanRadioButton.setText("Business Plan");
        businessPlanRadioButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        internetQuotaLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        internetQuotaLabel.setForeground(new java.awt.Color(102, 102, 102));
        internetQuotaLabel.setText("Internet Quota");

        capLimitLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        capLimitLabel.setForeground(new java.awt.Color(102, 102, 102));
        capLimitLabel.setText("Cap Limit");

        planInternetQuotaText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        planCapLimitText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        planCityOrABNLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        planCityOrABNLabel.setForeground(new java.awt.Color(102, 102, 102));
        planCityOrABNLabel.setText("City");

        planCityOrABNText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        planNumberOfEmployeesLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        planNumberOfEmployeesLabel.setForeground(new java.awt.Color(102, 102, 102));
        planNumberOfEmployeesLabel.setText("Number of Employees");

        planNOPText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(planCityOrABNLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(planIDLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(planUsernameText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                            .addComponent(planCityOrABNText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(planIDText, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(planNumberOfEmployeesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(capLimitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(planNOPText, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(internetQuotaLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(planInternetQuotaText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(planCapLimitText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(personalPlanRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(businessPlanRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personalPlanRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(businessPlanRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(internetQuotaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(planIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planInternetQuotaText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(capLimitLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planCapLimitText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planNumberOfEmployeesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planCityOrABNLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(planCityOrABNText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planNOPText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(107, 107, 107))
        );

        generalInformationLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        generalInformationLabel1.setForeground(new java.awt.Color(51, 51, 51));
        generalInformationLabel1.setText("General Information");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        mobilePhoneModelLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mobilePhoneModelLabel.setForeground(new java.awt.Color(102, 102, 102));
        mobilePhoneModelLabel.setText("Model");

        mobilePhoneOSLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mobilePhoneOSLabel.setForeground(new java.awt.Color(102, 102, 102));
        mobilePhoneOSLabel.setText("OS Type");

        mobileModelMemorySizeLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mobileModelMemorySizeLabel.setForeground(new java.awt.Color(102, 102, 102));
        mobileModelMemorySizeLabel.setText("Memory Size");

        mobileModelPriceLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mobileModelPriceLabel.setForeground(new java.awt.Color(102, 102, 102));
        mobileModelPriceLabel.setText("Price");

        planMobileModelText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        planMobileMemorySizeText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        planMobilePriceText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        planMobileOSComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Android", "IOS", "Windows" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mobilePhoneOSLabel)
                    .addComponent(mobileModelPriceLabel)
                    .addComponent(mobilePhoneModelLabel)
                    .addComponent(planMobileModelText)
                    .addComponent(mobileModelMemorySizeLabel)
                    .addComponent(planMobileMemorySizeText)
                    .addComponent(planMobilePriceText)
                    .addComponent(planMobileOSComboBox, 0, 205, Short.MAX_VALUE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mobilePhoneModelLabel)
                .addGap(4, 4, 4)
                .addComponent(planMobileModelText, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobileModelPriceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(planMobilePriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobileModelMemorySizeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(planMobileMemorySizeText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobilePhoneOSLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(planMobileOSComboBox)
                .addGap(16, 16, 16))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(102, 102, 102));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Month");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Day");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Year");

        planDateMonthText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        planDateYearText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        planDateDayText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(planDateDayText, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(planDateMonthText)
                    .addComponent(planDateYearText))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(planDateDayText, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(planDateMonthText, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(planDateYearText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout userAddPlanPanelLayout = new javax.swing.GroupLayout(userAddPlanPanel);
        userAddPlanPanel.setLayout(userAddPlanPanelLayout);
        userAddPlanPanelLayout.setHorizontalGroup(
            userAddPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userAddPlanPanelLayout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addGroup(userAddPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userAddPlanPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userAddPlanPanelLayout.createSequentialGroup()
                        .addGroup(userAddPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userAddPlanPanelLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(mobilePhoneTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(159, 159, 159)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(userAddPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(planClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(userAddPlanPanelLayout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(generalInformationLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        userAddPlanPanelLayout.setVerticalGroup(
            userAddPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userAddPlanPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(generalInformationLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userAddPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userAddPlanPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(planAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(planClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(userAddPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mobilePhoneTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userAddPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        userDataPanels.addTab("Add Plans", userAddPlanPanel);

        foundPlanAreaText.setBackground(new java.awt.Color(255, 204, 102));
        foundPlanAreaText.setColumns(20);
        foundPlanAreaText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        foundPlanAreaText.setRows(5);
        jScrollPane1.setViewportView(foundPlanAreaText);

        findplanIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        findplanIDLabel.setForeground(new java.awt.Color(51, 51, 51));
        findplanIDLabel.setText("Plan ID");

        findPlanButton.setBackground(new java.awt.Color(255, 153, 51));
        findPlanButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        findPlanButton.setForeground(new java.awt.Color(255, 255, 255));
        findPlanButton.setText("Find");
        findPlanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findPlanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userFindAPlanPanelLayout = new javax.swing.GroupLayout(userFindAPlanPanel);
        userFindAPlanPanel.setLayout(userFindAPlanPanelLayout);
        userFindAPlanPanelLayout.setHorizontalGroup(
            userFindAPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userFindAPlanPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(userFindAPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userFindAPlanPanelLayout.createSequentialGroup()
                        .addComponent(findPlanIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(findPlanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(findplanIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        userFindAPlanPanelLayout.setVerticalGroup(
            userFindAPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userFindAPlanPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(findplanIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userFindAPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findPlanIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findPlanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        userDataPanels.addTab("Fina a Plan", userFindAPlanPanel);

        planInformationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(planInformationTable);

        planDeleteButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        planDeleteButton.setForeground(new java.awt.Color(255, 102, 0));
        planDeleteButton.setText("Delete");
        planDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planDeleteButtonActionPerformed(evt);
            }
        });

        planUpdateButton.setBackground(new java.awt.Color(255, 153, 0));
        planUpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        planUpdateButton.setForeground(new java.awt.Color(255, 255, 255));
        planUpdateButton.setText("Update");
        planUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planUpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userPlanInfoPanelLayout = new javax.swing.GroupLayout(userPlanInfoPanel);
        userPlanInfoPanel.setLayout(userPlanInfoPanelLayout);
        userPlanInfoPanelLayout.setHorizontalGroup(
            userPlanInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPlanInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userPlanInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1055, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userPlanInfoPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(planDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(planUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        userPlanInfoPanelLayout.setVerticalGroup(
            userPlanInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPlanInfoPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userPlanInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(planUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        userDataPanels.addTab("Plans Information", userPlanInfoPanel);

        planFilteredTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(planFilteredTable);

        mobileModelLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mobileModelLabel.setForeground(new java.awt.Color(51, 51, 51));
        mobileModelLabel.setText("Mobile Model");

        expiryDateLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        expiryDateLabel.setForeground(new java.awt.Color(51, 51, 51));
        expiryDateLabel.setText("Expiry Date");

        usernameSortCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        usernameSortCheckBox.setForeground(new java.awt.Color(51, 51, 51));
        usernameSortCheckBox.setText("Sort by Username");
        usernameSortCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameSortCheckBoxActionPerformed(evt);
            }
        });

        mobileModelFilterText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mobileModelFilterTextKeyReleased(evt);
            }
        });

        planFilterButton.setBackground(new java.awt.Color(255, 153, 51));
        planFilterButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        planFilterButton.setForeground(new java.awt.Color(255, 255, 255));
        planFilterButton.setText("Filter by Date");
        planFilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planFilterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userPlanFilterPanelLayout = new javax.swing.GroupLayout(userPlanFilterPanel);
        userPlanFilterPanel.setLayout(userPlanFilterPanelLayout);
        userPlanFilterPanelLayout.setHorizontalGroup(
            userPlanFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPlanFilterPanelLayout.createSequentialGroup()
                .addContainerGap(348, Short.MAX_VALUE)
                .addGroup(userPlanFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userPlanFilterPanelLayout.createSequentialGroup()
                        .addComponent(mobileModelLabel)
                        .addGap(18, 18, 18)
                        .addComponent(mobileModelFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userPlanFilterPanelLayout.createSequentialGroup()
                        .addComponent(expiryDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(expiryDateFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(userPlanFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameSortCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planFilterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(274, 274, 274))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userPlanFilterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        userPlanFilterPanelLayout.setVerticalGroup(
            userPlanFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPlanFilterPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userPlanFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mobileModelFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(userPlanFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(usernameSortCheckBox)
                        .addComponent(mobileModelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userPlanFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expiryDateFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(planFilterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(expiryDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        userDataPanels.addTab("Filter Plans", userPlanFilterPanel);

        logoutMenu.setForeground(new java.awt.Color(51, 51, 51));
        logoutMenu.setText("Logout");
        logoutMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logoutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(logoutMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(userDataPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 1067, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userDataPanels, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userDataPanelsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_userDataPanelsStateChanged
        // user info tab
        userIDText.setText(user.getUserID() + "");
        userNameText.setText(user.getName());
        userUsernameText.setText(user.getUsername());
        userPasswordText.setText(user.getPassword());
        userAddressStreetNumberText.setText(user.getAddress().getStreetNum() + "");
        userAddressStreetText.setText(user.getAddress().getStreet());
        userAddressSuburbText.setText(user.getAddress().getSuburb());
        userAddressCityText.setText(user.getAddress().getCity());
        citiesComboBox.setModel(new DefaultComboBoxModel<String>(citiesList.toArray(new String[0])));
        citiesComboBox.setSelectedItem(user.getCity());

        //add plan tab
        if (personalPlanRadioButton.isSelected()) {
            planNOPText.setVisible(false);
            planNumberOfEmployeesLabel.setVisible(false);
            planCityOrABNLabel.setText("City");
        } else {
            planNOPText.setVisible(true);
            planNumberOfEmployeesLabel.setVisible(true);
            planCityOrABNLabel.setText("ABN");
        }

        //plan information table
        planInformationTable.setComponentPopupMenu(planEditPopupMenu);
        fillPlanInformationTable();

        //fillter table plan 
        fillFilteredTable();
    }//GEN-LAST:event_userDataPanelsStateChanged

    private void userChangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userChangeButtonActionPerformed
        try {
            user.setName(userNameText.getText());
            user.setPassword(userPasswordText.getText());
            user.getAddress().setStreetNum(Integer.parseInt(userAddressStreetNumberText.getText()));
            user.getAddress().setStreet(userAddressStreetText.getText());
            user.getAddress().setSuburb(userAddressSuburbText.getText());
            if (userCityChoiceCheckBox.isSelected()) {
                user.getAddress().setCity(userAddressCityText.getText());
                citiesList.add(userAddressCityText.getText());
                citiesComboBox.setModel(new DefaultComboBoxModel<String>(citiesList.toArray(new String[0])));
                citiesComboBox.setSelectedItem(user.getCity());
            } else {
                user.getAddress().setCity((String) citiesComboBox.getSelectedItem());
                userAddressCityText.setText(user.getAddress().getCity());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_userChangeButtonActionPerformed

    private void userCityChoiceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userCityChoiceCheckBoxActionPerformed
        if (userCityChoiceCheckBox.isSelected()) {
            userAddressCityText.setEditable(true);
        } else {
            userAddressCityText.setEditable(false);
        }

    }//GEN-LAST:event_userCityChoiceCheckBoxActionPerformed

    private void findPlanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findPlanButtonActionPerformed
        try {
            MobilePlan plan = user.findPlan(Integer.parseInt(findPlanIDText.getText()));
            if (plan != null) {
                foundPlanAreaText.append(plan.toString() + "\n");
            } else {
                foundPlanAreaText.append("Plan with ID: " + findPlanIDText.getText() + " has not been found \n");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_findPlanButtonActionPerformed

    private void planDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planDeleteButtonActionPerformed
        int tableRow = planInformationTable.getSelectedRow();
        int id = Integer.parseInt((String) planInformationTable.getValueAt(tableRow, 0));
        if (tableRow >= 0) {
            user.getPlans().remove(id);
            fillPlanInformationTable();
        }
    }//GEN-LAST:event_planDeleteButtonActionPerformed

    private void planClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planClearButtonActionPerformed
        planIDText.setText("");
        planUsernameText.setText("");
        planMobileModelText.setText("");
        planMobileMemorySizeText.setText("");
        planMobilePriceText.setText("");
        planCapLimitText.setText("");
        planInternetQuotaText.setText("");
        planDateDayText.setText("");
        planDateMonthText.setText("");
        planDateYearText.setText("");
        planCityOrABNText.setText("");
        planNOPText.setText("");
    }//GEN-LAST:event_planClearButtonActionPerformed

    private void planAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planAddButtonActionPerformed
        try {
            int planID = Integer.parseInt(planIDText.getText());
            String username = planUsernameText.getText();
            String mobileModel = planMobileModelText.getText();
            MobileType mobileType = MobileType.valueOf((String) planMobileOSComboBox.getSelectedItem());
            int mobileMemorySize = Integer.parseInt(planMobileMemorySizeText.getText());
            double mobilePrice = Double.parseDouble(planMobilePriceText.getText());
            MobilePhone mobileHandset = new MobilePhone(mobileModel, mobileType, mobileMemorySize, mobilePrice);
            int internetQuota = Integer.parseInt(planInternetQuotaText.getText());
            int capLimit = Integer.parseInt(planCapLimitText.getText());
            int day = Integer.parseInt(planDateDayText.getText());
            int month = Integer.parseInt(planDateMonthText.getText());
            int year = Integer.parseInt(planDateYearText.getText());
            MyDate expiryDate = new MyDate(day, month, year);
            MobilePlan plan;
            if (personalPlanRadioButton.isSelected()) {
                String city = planCityOrABNText.getText();
                try {
                    plan = new PersonalPlan(planID, username, mobileHandset, internetQuota, capLimit, city, expiryDate);
                } catch (PlanException e) {
                    JOptionPane.showMessageDialog(this, e);
                    plan = new PersonalPlan(e.getNewID(), username, mobileHandset, internetQuota, capLimit, city, expiryDate);
                }
            } else {
                int abn = Integer.parseInt(planCityOrABNText.getText());
                int numberOfEmployee = Integer.parseInt(planNOPText.getText());
                try {
                    plan = new BusinessPlan(planID, username, mobileHandset, internetQuota, capLimit, numberOfEmployee, abn, expiryDate);
                } catch (PlanException e) {
                    JOptionPane.showMessageDialog(this, e);
                    plan = new BusinessPlan(e.getNewID(), username, mobileHandset, internetQuota, capLimit, numberOfEmployee, abn, expiryDate);
                }
            }
            if (user.addPlan(plan)) {
                JOptionPane.showMessageDialog(this, "Plan has been added successfuly");
                planIDText.setText("");
                planUsernameText.setText("");
                planMobileModelText.setText("");
                planMobileMemorySizeText.setText("");
                planMobilePriceText.setText("");
                planDateDayText.setText("");
                planDateMonthText.setText("");
                planDateYearText.setText("");
                planCityOrABNText.setText("");
                planNOPText.setText("");
                planInternetQuotaText.setText("");
                planCapLimitText.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_planAddButtonActionPerformed

    private void personalPlanRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_personalPlanRadioButtonStateChanged
        if (personalPlanRadioButton.isSelected()) {
            planNOPText.setVisible(false);
            planNumberOfEmployeesLabel.setVisible(false);
            planCityOrABNLabel.setText("City");
        } else {
            planNOPText.setVisible(true);
            planNumberOfEmployeesLabel.setVisible(true);
            planCityOrABNLabel.setText("ABN");
        }
    }//GEN-LAST:event_personalPlanRadioButtonStateChanged

    private void planUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planUpdateButtonActionPerformed
        int tableRow = planInformationTable.getSelectedRow();
        int id = Integer.parseInt((String) planInformationTable.getValueAt(tableRow, 0));
        if (tableRow >= 0) {
            UpdateUI updateUI = new UpdateUI(user.getPlans().get(id), this);
            updateUI.setVisible(true);
        }
    }//GEN-LAST:event_planUpdateButtonActionPerformed

    private void mobileModelFilterTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileModelFilterTextKeyReleased
        fillFilteredTable();
    }//GEN-LAST:event_mobileModelFilterTextKeyReleased

    private void planFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planFilterButtonActionPerformed
        fillFilteredTable();
    }//GEN-LAST:event_planFilterButtonActionPerformed

    private void logoutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMenuMouseClicked
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutMenuMouseClicked

    private void usernameSortCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameSortCheckBoxActionPerformed
        fillFilteredTable();
    }//GEN-LAST:event_usernameSortCheckBoxActionPerformed

    private void updatePopupItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePopupItemActionPerformed
        planUpdateButton.doClick();
    }//GEN-LAST:event_updatePopupItemActionPerformed

    private void deletePopupItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePopupItemActionPerformed
//        planDeleteButton.setEnabled(true);
        planDeleteButton.doClick();
    }//GEN-LAST:event_deletePopupItemActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UserUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton businessPlanRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel capLimitLabel;
    private javax.swing.JComboBox<String> citiesComboBox;
    private javax.swing.JMenuItem deletePopupItem;
    private javax.swing.JTextField expiryDateFilterText;
    private javax.swing.JLabel expiryDateLabel;
    private javax.swing.JButton findPlanButton;
    private javax.swing.JTextField findPlanIDText;
    private javax.swing.JLabel findplanIDLabel;
    private javax.swing.JTextArea foundPlanAreaText;
    private javax.swing.JLabel generalInformationLabel1;
    private javax.swing.JLabel internetQuotaLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenu logoutMenu;
    private javax.swing.JTextField mobileModelFilterText;
    private javax.swing.JLabel mobileModelLabel;
    private javax.swing.JLabel mobileModelMemorySizeLabel;
    private javax.swing.JLabel mobileModelPriceLabel;
    private javax.swing.JLabel mobilePhoneModelLabel;
    private javax.swing.JLabel mobilePhoneOSLabel;
    private javax.swing.JLabel mobilePhoneTitleLabel;
    private javax.swing.JLabel personalInformationLabel;
    private javax.swing.JRadioButton personalPlanRadioButton;
    private javax.swing.JButton planAddButton;
    private javax.swing.JTextField planCapLimitText;
    private javax.swing.JLabel planCityOrABNLabel;
    private javax.swing.JTextField planCityOrABNText;
    private javax.swing.JButton planClearButton;
    private javax.swing.JTextField planDateDayText;
    private javax.swing.JTextField planDateMonthText;
    private javax.swing.JTextField planDateYearText;
    private javax.swing.JButton planDeleteButton;
    private javax.swing.JPopupMenu planEditPopupMenu;
    private javax.swing.JButton planFilterButton;
    private javax.swing.JTable planFilteredTable;
    private javax.swing.JLabel planIDLabel;
    private javax.swing.JTextField planIDText;
    private javax.swing.JTable planInformationTable;
    private javax.swing.JTextField planInternetQuotaText;
    private javax.swing.JTextField planMobileMemorySizeText;
    private javax.swing.JTextField planMobileModelText;
    private javax.swing.JComboBox<String> planMobileOSComboBox;
    private javax.swing.JTextField planMobilePriceText;
    private javax.swing.JTextField planNOPText;
    private javax.swing.JLabel planNumberOfEmployeesLabel;
    private javax.swing.JButton planUpdateButton;
    private javax.swing.JTextField planUsernameText;
    private javax.swing.JMenuItem updatePopupItem;
    private javax.swing.JPanel userAddPlanPanel;
    private javax.swing.JLabel userAddressCityLabel;
    private javax.swing.JTextField userAddressCityText;
    private javax.swing.JLabel userAddressStreetLabel;
    private javax.swing.JTextField userAddressStreetNumberText;
    private javax.swing.JTextField userAddressStreetText;
    private javax.swing.JLabel userAddressSuburbLabel;
    private javax.swing.JTextField userAddressSuburbText;
    private javax.swing.JLabel userAdressInfoLabel;
    private javax.swing.JLabel userAdressStreetNumberLabel;
    private javax.swing.JButton userChangeButton;
    private javax.swing.JCheckBox userCityChoiceCheckBox;
    private javax.swing.JTabbedPane userDataPanels;
    private javax.swing.JPanel userFindAPlanPanel;
    private javax.swing.JLabel userIDLabel;
    private javax.swing.JTextField userIDText;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameText;
    private javax.swing.JLabel userPasswordLabel;
    private javax.swing.JTextField userPasswordText;
    private javax.swing.JPanel userPersonalDataPanel;
    private javax.swing.JPanel userPlanFilterPanel;
    private javax.swing.JPanel userPlanInfoPanel;
    private javax.swing.JLabel userUsernameLabel;
    private javax.swing.JTextField userUsernameText;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JCheckBox usernameSortCheckBox;
    // End of variables declaration//GEN-END:variables

    public void fillPlanInformationTable() {
        String[] planInformationTableHeader = {"Plan ID", "Username", "Mobile Model", "OS Type", "Memory Size", "Handset Price", "Internet Quota", "Cap Limit", "Expiry Date", "City", "ABN", "Mumber Of Employees", "Monthly Payment"};
        DefaultTableModel tableModel = new DefaultTableModel(planInformationTableHeader, 0);
        planInformationTable.setModel(tableModel);
        for (MobilePlan plan : user.getPlans().values()) {
            String[] tableRow = new String[13];
            tableRow[0] = plan.getId() + "";
            tableRow[1] = plan.getUserName();
            tableRow[2] = plan.getMobileModel();
            tableRow[3] = plan.getMobilePhone().getMobileType().toString();
            tableRow[4] = plan.getMobilePhone().getMemorySize() + "";
            tableRow[5] = plan.getMobilePhone().getPrice() + "";
            tableRow[6] = plan.getInternetQuota() + "";
            tableRow[7] = plan.getCapLimit() + "";
            tableRow[8] = plan.getExpiryDate().toString();
            tableRow[12] = String.format("$%.2f", plan.calcPayment(10));
            if (plan instanceof PersonalPlan) {
                tableRow[9] = ((PersonalPlan) plan).getCity();
                tableRow[10] = "NA";
                tableRow[11] = "NA";
            } else {
                tableRow[9] = "NA";
                tableRow[10] = ((BusinessPlan) plan).getABN() + "";
                tableRow[11] = ((BusinessPlan) plan).getNumberOfEmployee() + "";
            }
            tableModel.addRow(tableRow);
        }
    }

    public void fillFilteredTable() {
        ArrayList<MobilePlan> plans = user.shallowCopyPlans();
        try {
            if (!mobileModelFilterText.getText().isEmpty()) {
                plans = MobilePlan.fillterByMobileModel(plans, mobileModelFilterText.getText());
            }
            if (!expiryDateFilterText.getText().isEmpty()) {
                String[] fields = expiryDateFilterText.getText().split("/");
                plans = MobilePlan.filterByExpiryDate(plans, new MyDate(Integer.parseInt(fields[0]), Integer.parseInt(fields[1]), Integer.parseInt(fields[2])));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

        if (usernameSortCheckBox.isSelected()) {
            Collections.sort(plans);
        }
        String[] fliterTableHeader = {"Plan ID", "Username", "Mobile Model", "OS Type", "Memory Size", "Handset Price", "Internet Quota", "Cap Limit", "Expiry Date", "City", "ABN", "Mumber Of Employees", "Monthly Payment"};
        DefaultTableModel tableModel = new DefaultTableModel(fliterTableHeader, 0);
        planFilteredTable.setModel(tableModel);
        for (MobilePlan plan : plans) {
            String[] tableRow = new String[13];
            tableRow[0] = plan.getId() + "";
            tableRow[1] = plan.getUserName();
            tableRow[2] = plan.getMobileModel();
            tableRow[3] = plan.getMobilePhone().getMobileType().toString();
            tableRow[4] = plan.getMobilePhone().getMemorySize() + "";
            tableRow[5] = plan.getMobilePhone().getPrice() + "";
            tableRow[6] = plan.getInternetQuota() + "";
            tableRow[7] = plan.getCapLimit() + "";
            tableRow[8] = plan.getExpiryDate().toString();
            tableRow[12] = String.format("$%.2f", plan.calcPayment(10));
            if (plan instanceof PersonalPlan) {
                tableRow[9] = ((PersonalPlan) plan).getCity();
                tableRow[10] = "NA";
                tableRow[11] = "NA";
            } else {
                tableRow[9] = "NA";
                tableRow[10] = ((BusinessPlan) plan).getABN() + "";
                tableRow[11] = ((BusinessPlan) plan).getNumberOfEmployee() + "";
            }
            tableModel.addRow(tableRow);
        }
    }
}
