
public class PlanException extends Exception {

//    private int intID;
    // PlanException(int id) {
    // this.intID = id;
    // if (this.intID / 100000 == 3)
    // throw new ArithmeticException();
    // }
    // public String toString() {
    // return "The Plan ID was not valid and a new ID (the generated ID) is
    // generated by
    // admin and assigned for the Plan";
    // }
    // Assignment 2 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//    PlanException(int id) {
//        this.intID = id;
//    }
//
//    public String toString() {
//        return "The Plan ID was not valid and a new ID ( " + this.intID
//                + " ) is generated by admin and assigned for the Plan";
//    }
    // Lab 8 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    private int newID;
    private int oldID;

    PlanException(int id) {
        this.oldID = id;
        this.newID = generateNewID();
    }

    public int getNewID() {
        return this.newID;
    }

    public int generateNewID() {
        return (int) ((Math.random() * ((3999999 - 3000000) + 1)) + 3000000);
    }

    public String toString() {
        return "The Plan ID ( " + this.oldID + " ) was not valid and a new ID ( " + this.newID + " ) is generated by admin and assigned for the Plan";
    }

}
